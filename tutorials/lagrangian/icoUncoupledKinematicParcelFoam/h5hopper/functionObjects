
functions
{
    h5Data
    {
        // Write the solution (Eulerian and Lagrangian fields)
        // into a HDF5 container
        type                h5Write;
        
        // Where to load it from
        functionObjectLibs  ( "libIOh5Write.so" );
        
        // Volume fields to write
        objectNames         (  );
        
        // Kinematic clouds to write (leave blank to skip)
        cloudNames          ( kinematicCloud );
        
        // Attributes to write for particles. Valid choices are:
        //  - origProc        = Original process (from where it was injected)
        //  - origId          = ID on orignal process
        //  - cell            = Current cell (on local process)
        //  - currProc        = Current process
        //  - rho             = Particle density
        //  - d               = Particle diameter
        //  - age             = Particle age
        //  - position        = Position in space
        //  - U               = Particle velocity
        //  - Us              = Slip velocity Us = U - Uc
        cloudAttribs        ( position U Us age );
        
        // HDF5 dataset attributes. Valid options are:
        //  - shuffle         = Shuffle bytes in order to improve compression
        //  - deflate         = Compress data
        //  - checksum        = Write checsum to data to improve reliability
        h5Attribs           (  );
        
        // HDF5 chunk size (in number of bytes)
        chunkSize           0;
        
        // Write interval (in number of iterations)
        writeInterval       5;
    }
}

// ************************************************************************* //
