/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// So we get a decent warning if we have multiple functionObject entries
// with the same name.
#inputMode error;

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.5;

deltaT          0.005;

writeControl    timeStep;

writeInterval   20;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

functions
{
    h5Data
    {
        // Write the solution Eeulerian and Lagrangian fields)
        // into a HDF5 container
        type                h5Write;
        
        // Where to load it from
        functionObjectLibs  ( "libIOh5Write.so" );
        
        // Volume fields to write
        objectNames         ( U p );
        
        // Kinematic clouds to write (leave blank to skip)
        cloudNames          ( kinematicCloud );
        
        // Attributes to write for particles. Valid choices are:
        //  - origProc        = Original process (from where it was injected)
        //  - origId          = ID on orignal process
        //  - cell            = Current cell (on local process)
        //  - currProc        = Current process
        //  - rho             = Particle density
        //  - d               = Particle diameter
        //  - age             = Particle age
        //  - position        = Position in space
        //  - U               = Particle velocity
        //  - Us              = Slip velocity Us = U - Uc
        cloudAttribs        ( position U Us age );
        
        // Write interval (in number of iterations)
        writeInterval       20;
    }
}

// ************************************************************************* //
